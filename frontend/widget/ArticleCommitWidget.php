<?php
namespace frontend\widget;

use common\models\startdata\ArticleCommit;
use lbmzorx\components\helper\TreeHelper;
use Yii;
use common\models\startdata\ArticleCate;
use yii\caching\TagDependency;
use yii\helpers\Html;
use yii\helpers\Url;

/**
 * Created by Administrator.
 * Date: 2018/5/20 14:38
 * github: https://github.com/lbmzorx
 */
class ArticleCommitWidget extends PanelWidget
{
    public $condition=[];
    public $ulOption=[];
    public $liOption=[];
    public $articleCommit;
    public $article_id;
    public $commitCount;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        if(empty($this->ulOption['class'])){
            $this->ulOption['class']='list-group';
        }
        if(empty($this->liOption['class'])){
            $this->liOption['class']='list-group-item';
        }
    }

    public function getHeadContent()
    {
        return Html::tag('h4',Yii::t('app','Commits').'   '.Html::tag('span',$this->commitCount,[]).\yii::t('app','Rows'));//Html::tag('h3',Yii::t('app','Category'),['class'=>'panel-title']); // TODO: Change the autogenerated stub
    }

    public function getBodyContent()
    {
        $data=$this->getArticleCateData($this->condition);
        $li=$this->treeCommit($data,[]);
        $this->renderJs();
        $str='';
        foreach ($li as $v){
            $str.=$v;
        }
        return Html::tag('div',$str,$this->ulOption); // TODO: Change the autogenerated stub
    }

    public function treeCommit($input,$options){
        $data = [];
        foreach ($input as $k => $v){
            if(isset($v['sub'])){
                $userInfo=Html::a(Html::img(Html::encode($v['user']['head_img']),['alt'=>Html::encode($v['user']['username']),'onerror'=>'this.src=\'/img/default-user-40.png\'']),['user/index','id'=>$v['user']['id']]);
                $left=Html::tag('div',$userInfo,['class'=>'media-left']);

                $userName=Html::a($v['user']['username']).'    '.date('Y-m-d',$v['add_time']);
                $content=Html::tag('div',$v['content'],['class'=>'commit-box']);

                $reply=Html::a('<i class="fa fa-reply"></i>' ,'javascript:void(0)',[
                    'class'=>'replay-item reply-box',
                    'title'=>\yii::t('app','Reply'),
                    'data-id'=>$v['id'],
                    'data-article_id'=>$v['article_id'],
                ]);
                $sub=$this->treeCommit($v['sub'],$options);
                $substr=implode('',$sub);
                $body=Html::tag('div',$userName.$reply.$content.$substr,['class'=>'media-body']);
                $data[$v['id']]=Html::tag('div',$left.$body,['class'=>'commit-item']);;

            }else{

                $userInfo=Html::a(Html::img(Html::encode($v['user']['head_img']),['alt'=>Html::encode($v['user']['username']),'onerror'=>'this.src=\'/img/default-user-40.png\'']),['user/index','id'=>$v['user']['id']]);
                $left=Html::tag('div',$userInfo,['class'=>'media-left']);

                $userName=Html::a($v['user']['username']).'    '.date('Y-m-d',$v['add_time']);
                $content=Html::tag('div',$v['content'],['class'=>'commit-box']);
                $reply=Html::a('<i class="fa fa-reply"></i>' ,'javascript:void(0)',[
                    'class'=>'replay-item reply-box',
                    'title'=>\yii::t('app','Reply'),
                    'data-id'=>$v['id'],
                    'data-article_id'=>$v['article_id'],
                ]);

                $body=Html::tag('div',$userName.$reply.$content,['class'=>'media-body']);
                $data[$v['id']]=Html::tag('div',$left.$body,['class'=>'commit-item']);
            }
        }
        return $data;
    }

    public function getArticleCateData($condition){
        $cache=\yii::$app->cache;
        $key=serialize(['type'=>'articleCate',__METHOD__,'article_id'=>$this->article_id]);
        if($data=$cache->get($key)){
            return $data;
        }else{
            $data=ArticleCommit::find()->where([
                    'article_id'=>$this->article_id,
                    'status'=>ArticleCommit::STATUS_AUDIT_PASS,
                ]
            )->andFilterWhere($condition)->orderBy(['id'=>SORT_ASC])->with('user')->asArray()->all();

            if($data){
                $data=TreeHelper::array_cate_as_subarray($data,0,'parent_id');
            }

            $cache->set($key,$data,(3600*24*30+rand(1,600)),new TagDependency([
                'tags'=>ArticleCommit::CACHE_TAG,
            ]));
            return $data;
        }
    }

    public function renderJs(){
        $view = \yii::$app->view;
        $title=\yii::t('app','Reply');
        $btn=\yii::t('app','Ok').'\',\''.\yii::t('app','Cancel');;
        $csrfParam=\yii::$app->request->csrfParam;
        $csrfTocken=\yii::$app->request->csrfToken;
        $action=Url::to(['commit']);
        $errormsg=\yii::t('app','Request Error!');
        $loginMsg=\yii::t('app','Please Login!');
        $loginUrl=\yii\helpers\Url::to(['/site/login']);
        $view->registerJs(<<<SCRITP
        var layer;
        layui.use(['layer'],function(){
            layer=layui.layer;
        });
$('.reply-box').click(function(){
    var id=$(this).attr('data-id'),
        article_id=$(this).attr('data-article_id');
        var widtharea;
        var width = document.documentElement.clientWidth;
        if(width>870){
            widtharea='870px';
        }else{
            widtharea='80%';
        }
        
        layer.open({
            type:1,
            'title':'{$title}',
            area:[widtharea,'340px'],
            btn:['{$btn}'],
            content:$('#mdeditorarticlecommitform-content'),
            yes:function(layuiIndex,layuiDom){
                var form=new FormData();
                form.append($(layuiDom).find('#articlecommitform-content').attr('name'),$(layuiDom).find('#articlecommitform-content').val());
                form.append('ArticleCommitForm[article_id]',article_id);
                form.append('ArticleCommitForm[parent_id]',id);
                form.append('{$csrfParam}','{$csrfTocken}');
              
                $.ajax({
                    'url':'{$action}',
                    type:'post',                   
                    data:form,
                    dataType: 'json',
                    contentType : false,
                    processData : false, 
                    success:function(res){
                        if(res.status){
                            layer.msg(res.msg);
                            location.reload();
                        }else{
                            layer.alert(res.msg);
                        }
                    },
                    error:function(res){
                        if(res.status==403){
                            layer.alert('{$loginMsg}',function () {
                                location.href='{$loginUrl}';
                            });
                        }else{
                            layer.alert('{$errormsg}');
                        }                        
                    }                    
                });
                
            }
        });
    
});
SCRITP
);
    }

}