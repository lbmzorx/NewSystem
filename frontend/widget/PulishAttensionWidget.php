<?php
namespace frontend\widget;

use common\models\startdata\Attention;
use Yii;
use common\models\startdata\ArticleCate;
use yii\caching\TagDependency;
use yii\helpers\Html;
use yii\helpers\Url;

/**
 * Created by Administrator.
 * Date: 2018/5/20 14:38
 * github: https://github.com/lbmzorx
 */
class PulishAttensionWidget extends PanelWidget
{
    public $condition=[];
    public $ulOption=[];
    public $liOption=[];
    public $sign;
    public $title;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        if(empty($this->ulOption['class'])){
            $this->ulOption['class']='list-group';
        }
        if(empty($this->liOption['class'])){
            $this->liOption['class']='list-group-item';
        }
        if($this->sign==''){
            $this->sign='article_create_update';
        }
    }

    public function getHeadContent()
    {
        return $this->title;//Html::tag('h3',Yii::t('app','Category'),['class'=>'panel-title']); // TODO: Change the autogenerated stub
    }

    public function getBodyContent()
    {
        $data=$this->getArticleCateData($this->condition);
        $str='';
        foreach ($data as $v){
            $str.=Html::tag('li',Html::encode($v['value']),$this->liOption);
        }

        return Html::tag('ul',$str,$this->ulOption); // TODO: Change the autogenerated stub
    }


    public function getArticleCateData($condition){
        $cache=\yii::$app->cache;
        $key=serialize(['type'=>'articleCate',__METHOD__]);
        if($data=$cache->get($key)){
            return $data;
        }else{
            $data=Attention::find()->select('value')->where([
                    'sign'=>$this->sign
                ])->andFilterWhere($condition)->orderBy(['sort'=>SORT_DESC,'id'=>SORT_DESC])->asArray()->all();

            $cache->set($key,$data,(3600*24*30+rand(1,6000)),new TagDependency([
                'tags'=>Attention::CACHE_TAG,
            ]));
            return $data;
        }
    }
}