<?php

namespace chat\modules\v1\controllers;

use chat\models\v1\defination\StatusCode;
use chat\models\v1\user\LoginForm;
use yii\base\Exception;
use yii\rest\Controller;

/**
 * Default controller for the `v1` module
 */
class SiteController extends Controller
{
    const status_codes=[
        '400040'=>'Can\'t generate public key',
    ];


    /**
     * @return array
     */
    public function behaviors()
    {
        return array_merge(parent::behaviors(),[
            'status_code'=>[
                'class'=>'chat\modules\v1\components\ApiResponseBehavior',
            ],
        ]); // TODO: Change the autogenerated stub
    }

    /**
     * @return array
     */
    public function verbs()
    {
        return [
            'index' => ['GET', 'HEAD'],
            'date' =>['GET'],
            'public-key' => ['GET'],
            'login' => ['POST'],
            'register' => ['POST'],
        ];
    }

    /**
     * @SWG\Get(path="/site/index",
     *     tags={"测试链接"},
     *     summary="显示hellow world 测试是否能链接接口",
     *     description="返回hellow world",
     *     produces={"application/json"},
     *     @SWG\Response(
     *          response = 200,
     *          description = "success",
     *          @SWG\Schema(
     *              type="object",
     *              @SWG\Property(
     *                  title="初始化",
     *                  property="result",
     *                  type="string",
     *                  description="响应 hello world",
     *                  example="20180703 14:23:45",
     *              )
     *          )
     *     )
     * )
     */
    public function actionIndex(){
        return [
            'result'=>'Hello world!'
        ];
    }

    /**
     * @SWG\Get(path="/site/date",
     *     tags={"系统时间"},
     *     summary="显示系统时间",
     *     description="返回系统时间",
     *     produces={"application/json"},
     *     @SWG\Response(
     *          response = 200,
     *          description = "success",
     *          @SWG\Schema(
     *             type="object",
     *             @SWG\Property(
     *                  title="datetime",
     *                  property="datetime",
     *                  type="datetime",
     *                  description="日期时间格式为 yyymmdd HH:ii:ss",
     *                  example="20180703 14:23:45",
     *             )
     *         ),
     *     )
     * )
     */
    public function actionDate(){
        return [
            'datetime'=>date('Y-m-d H:i:s')
        ];
    }

    /**
     * @SWG\Post(path="/site/login",
     *     tags={"登录系统"},
     *     summary="显示系统时间",
     *     description="返回系统时间",
     *     produces={"application/json"},
     *     @SWG\Response(
     *          response = 200,
     *          description = "success",
     *          @SWG\Schema(
     *             type="object",
     *             @SWG\Property(
     *                  title="datetime",
     *                  property="datetime",
     *                  type="datetime",
     *                  description="日期时间格式为 yyymmdd HH:ii:ss",
     *                  example="20180703 14:23:45",
     *             ),
     *         ),
     *     )
     * )
     */
    public function actionLogin(){
        $model=new LoginForm();
        $model->load(\yii::$app->request->post(),'');
        $res=$model->login();
        if ($res){
            return ['access_token'=>$res];
        }else{
            return $model;
        }
    }

    /**
     * @SWG\Get(path="/site/public-key",
     *     tags={"系统公钥"},
     *     summary="获取系统公钥",
     *     description="公钥",
     *     produces={"application/json"},
     *     @SWG\Response(
     *          response = 200,
     *          description = "success",
     *          @SWG\Schema(
     *             type="object",
     *             description="返回对象",
     *             additionalProperties= {"#/definitions/Common-response"},
     *          ),
     *
     *     )
     * )
     */
    public function actionPublicKey(){
        try{
            $publicKey=\lbmzorx\components\helper\Rsaenctype::getPubKey(true);
            if ($publicKey) {
                return [
                    'public-key'=>$publicKey,
                    'length'=>2048
                ];
            }
            $message=StatusCode::getMessage(StatusCode::SITE_PULIC_KEY_FAILED);
        }catch (Exception $e){
            $message=$e->getMessage();
        }
        return [
            'status_code'=> StatusCode::SITE_PULIC_KEY_FAILED,
            'message'=> $message,
        ];
    }

    /**
     * @SWG\Post(path="/site/rsa-encrypt",
     *     tags={"rsa加密字符串"},
     *     summary="使用公钥加密字符串",
     *     description="使用公钥加密字符串，并返回加密结果",
     *     produces={"application/json"},
     *     @SWG\Parameter(
     *         name="public_key",
     *         in="formData",
     *         description="公钥",
     *         required=true,
     *         type="string"
     *     ),
     *     @SWG\Parameter(
     *         name="length",
     *         in="formData",
     *         description="rsa 加密长度",
     *         required=true,
     *         type="integer",
     *         format="int32",
     *     ),
     *     @SWG\Response(
     *          response = 200,
     *          description = "success",
     *          @SWG\Schema(
     *             type="object",
     *             @SWG\Property(
     *                  title="加密字符",
     *                  property="result",
     *                  type="string",
     *                  description="加密后的字符串",
     *                  example="klzCY-mhfh23",
     *             )
     *         ),
     *     )
     * )
     */
    public  function actionRsaEncrypt(){

    }

    /**
     * @SWG\Get(path="/site/error",
     *     tags={"系统错误"},
     *     summary="显示系统错误信息",
     *     description="返回系统系统错误信息",
     *     produces={"application/json"},
     *     @SWG\Response(
     *          response = 200,
     *          description = "success",
     *          @SWG\Schema(
     *             type="object",
     *             @SWG\Property(
     *                  title="datetime",
     *                  property="datetime",
     *                  type="datetime",
     *                  description="日期时间格式为 yyymmdd HH:ii:ss",
     *                  example="20180703 14:23:45",
     *             )
     *         ),
     *     )
     * )
     */
    public function actionError(){
        $exception=\yii::$app->errorHandler->exception;
        if($exception){
            return [
                'code'=>$exception->getCode(),
                'message'=>$exception->getMessage(),
            ];
        }else{
            return [
                'code'=>200,
                'message'=>'一切正常',
            ];
        }
    }
}
