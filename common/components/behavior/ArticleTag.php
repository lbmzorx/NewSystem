<?php
/**
 * Created by Administrator.
 * Date: 2018/6/20 20:01
 * github: https://github.com/lbmzorx
 */
namespace common\components\behavior;


use common\models\startdata\Tag;
use common\models\startdatabase\Article;
use yii\base\Behavior;

class ArticleTag extends Behavior
{
    public function events()
    {
        return [
            Article::EVENT_AFTER_INSERT=>"insertTags",
            Article::EVENT_AFTER_UPDATE=>"updateTags",
            Article::EVENT_AFTER_DELETE=>"deleteTags",
        ]; // TODO: Change the autogenerated stub
    }

    public function insertTags($event){
        /**
         * @var $model Article
         */
        $model=$event->sender;
        $tag=Tag::findOne(['name'=>$model->tag]);
        if($tag){
            $tag->updateCounters(['frequence'=>1]);
        }else{
            $tag=new Tag();
            $tag->name=$model->tag;
            $tag->frequence=1;
            $tag->save();
        }
    }

    public function updateTages($event){
        /**
         * @var $model Article
         */
        $model=$event->sender;

        $newTag=$model->tag;
        $oldTag=$model->getOldAttribute('tag');

        if($newTag!=$oldTag){
            $newtagmodel = Tag::findOne(['name'=>$newTag]);
            if($newtagmodel){
                $newtagmodel->updateCounters(['frequence'=>1]);
            }else{
                $newtagmodel=new Tag();
                $newtagmodel->name=$model->tag;
                $newtagmodel->frequence=1;
                $newtagmodel->save();
            }

            $oldTagModel=Tag::findOne(['name'=>$oldTag]);
            if($oldTagModel){
                $oldTagModel->updateCounters(['frequence'=>-1]);
            }
        }
    }

    public function deleteTag($event){
        /**
         * @var $model Article
         */
        $model=$event->sender;
        $tag=Tag::findOne(['name'=>$model->tag]);
        if($tag){
            $tag->updateCounters(['frequence'=>-1]);
        }
    }
}